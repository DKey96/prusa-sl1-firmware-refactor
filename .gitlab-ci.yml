image: prusa/sl1fw

stages:
  - build
  - test
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: "recursive"

before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - echo "__full_version__ = 'TEST EXECUTION'" > slafw/__init__.py

build:
  stage: build
  script:
    - python3 setup.py build

mcsim:
  stage: build
  script:
    - sh build_sim.sh
  artifacts:
    paths:
      - SLA-control-01.elf

sphinx:
  stage: build
  only:
    refs:
      - master
  artifacts:
    paths:
      - documentation/*
  script:
    - sh builddoc.sh
    - mv doc/build documentation

unittest:
  stage: test
  dependencies:
    - mcsim
  script:
    - mkdir "$CI_PROJECT_DIR/model"
    - touch "$CI_PROJECT_DIR/model/sl1"
    - sh unittest.sh

integration:sl1:
  stage: test
  dependencies:
    - mcsim
  script:
    - mkdir "$CI_PROJECT_DIR/model"
    - touch "$CI_PROJECT_DIR/model/sl1"
    - sh integrationtest.sh

integration:sl1s:
  stage: test
  dependencies:
    - mcsim
  script:
    - mkdir "$CI_PROJECT_DIR/model"
    - touch "$CI_PROJECT_DIR/model/sl1s"
    - sh integrationtest.sh

integration:m1:
  stage: test
  dependencies:
    - mcsim
  script:
    - mkdir "$CI_PROJECT_DIR/model"
    - touch "$CI_PROJECT_DIR/model/m1"
    - sh integrationtest.sh

pylint:
  stage: test
  dependencies: []
  script:
    - sh pylint.sh

mypy:
  stage: test
  dependencies: []
  script:
    - sh mypy.sh

pages:
  stage: deploy
  dependencies:
    - sphinx
  script:
    - mv documentation public
  artifacts:
    paths:
      - public
  only:
    refs:
      - master

